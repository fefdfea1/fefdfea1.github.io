{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Next_JS","result":{"pageContext":{"currentCategory":"Next_JS","categories":["All","Next_JS"],"edges":[{"node":{"id":"3f046e2e-2493-5c94-a344-0b0480f5ce44","excerpt":"👋Next Js 폴더의 역할에 대하여 이번 포스팅은 저번 포스팅에서 이야기 한 것 처럼 CNA를 통해 제작한 템플릿의 폴더가 각각 어떠한 역할을 하는지에 대해 알아보겠다. ✍️알아볼 폴더의 종류 우리가 알아볼 폴더의 구조는 아래의 이미지에서 보이듯 최상위의 파일과 app안의 파일들에 대해 알아 볼 것이다. ✨ 각 폴더의 역할 🎲 최상위 폴더 App : Next Js의 페이지를 구성하는 파일로 가장 상위의 파일이 app이라는 폴더이다 이곳에서 추가적인 라우팅 처리등을 하여 페이지를 생성한다. node_modules : npm or yarn과 같은 패키지 매니저를 이용하여 다운한 패키지들을 보관하는 폴더이다. public : 개발시 이미지 폰트등 정적인 요소들이 들어가는 파일이다 이곳에 들어가는 파일들은 번들링시 이름이 변경되지 않고 절대경로를 사용 할 수 있는 이점이있다. .gitignore : 이 파일은 github에 올라가면 안 되는 민감한 파일들을 등록하여 git을 이용하여 gi…","fields":{"slug":"/next-folder/"},"frontmatter":{"categories":"Next_JS","title":"Next JS의 각 폴더별 역할","date":"May 25, 2024"}},"next":{"fields":{"slug":"/next-createNext/"}},"previous":null},{"node":{"id":"818b2485-2d3e-5b3d-a1e5-7b1cf4976ea8","excerpt":"👋 이번 포스팅에 대하여 이 블로그의 첫 포스팅은 이전 블로그에서 적으려 했던 Next Js에 대한 주제로 계속 이어나갈까한다. 본래는 모든 내용을 여기로 옮기고 이 블로그를 계속 이어나갈까 생각도 하였지만 그러기에는 워낙 시간이 오래 걸릴 것 같아 velog의 내용을 이어가기로 결정하였다. 만일 이전 블로그의 글이 궁금하다면 위의 header 부분에 존재하는 PrevBlog를 보도록 하자 또한 Next JS에 대한 포스팅은 최종적으로 Mongoose를 이용하여 게시판을 제작하는 것을 목표로 계속 포스팅을 올릴 예정이다. ✍️ 시작하기 앞서 필요한 세팅 Next Js를 하기 위해서는 최신버전의 Node가 깔려 있는지 확인할 필요가 있으므로 cmd에 아래의 명령어를 입력하여 노드가 최신버전 18버전 이상인지 확인하도록 하자 ✨ CNA를 통한 Next Js 기본 템플릿 생성 이 블로그는 최대한 이론과 실습을 분리하여 진행할 예정이므로 방법을 설명할때는 최대한 이론을 베재하고 사용방법만을…","fields":{"slug":"/next-createNext/"},"frontmatter":{"categories":"Next_JS","title":"Next Js 개발환경 세팅","date":"May 21, 2024"}},"next":null,"previous":{"fields":{"slug":"/next-folder/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}